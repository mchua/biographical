NOTE: The bio in this text is outdated, and kept for archival purposes. http://blog.melchua.com/about/ has the current text.

Short third-person version (this is what I copy-paste into boxes asking for a “speaker bio”):

Mel Chua is a contagiously enthusiastic hacker, writer, and educator with over a decade of teaching and curriculum development experience and a solid track record in leadership positions at Red Hat, One Laptop Per Child, Sugar Labs, Fedora, and other Free, Libre, and Open Source Software (FLOSS) communities. Currently based at Purdue University, she bridges academic research on successful communities with deep personal experience getting her hands dirty building them.

Longer and hopefully more fun version:

My name is Mel. I’ve been called a hacker by other hackers. Pressed for a short job description, I would say that I engineer educations. I’ve also been called an open-source community ninja, catnip gardener (from the old adage that managing programmers is like herding cats), and a Swiss Army Person or a Hack Of All Trades.

My quest is to make a world where makers make themselves, and I’m particularly intrigued with the space between how hackers learn and how engineers are taught (in undergrad and beyond), which is the research focus of my PhD studies in Engineering Education at Purdue. Someday I hope to become a professor of electrical engineering. There’s plenty to do before that, though. I’m roaming around the world, running unconferences, writing textbooks, working on interesting projects that I love, and honing my sketching and improvisation skills with pencils, sci-fi short stories, code, food, pianos, and occasionally cameras and stages (though I’m more often dressed in black behind the scenes hauling ropes to make the curtains rise, as befits a techie ninja).

You may also know me from: Red Hat’s Community Leadership Team, Fedora, Sugar Labs, One Laptop Per Child, the MIT Media Lab, Design Continuum, Appropedia, or The Open Planning Project, among other places.

I love hardware, especially if it’s meant to be a generative platform. Somewhere in the depths of my files is a piece of paper from Olin College that says I can BS about electrical engineering, my choice of major being a canonical masochism story involving a dartboard and the decision to study the field I had the least background in and the most terror of. (The terror is now gone. The background is nonzero and monotonically increasing.) I’m intrigued by the design of platforms meant for engineers to use in creating products of their own; in an ideal world, I’d make nothing but demo boards, APIs, and developer toolkits. Every so often I look into accessibility technology, particularly hearing aid designs, to see if there’s anything I want to use or hack on myself (I’m deaf).

I love software, especially if it’s free (in both senses of the word). My introduction to open source, Linux, and programming involves some high school friends, a stack of Debian install floppies, and several painful weeks that have left me perpetually thankful for the advances in installers since that fateful day. I live in .txt, .c, .cpp, and .py files (okay, and .bashrc) and learn things by filing bugs and writing documentation, a trait that fellow hackers occasionally find endearing. Though I can and have developed code, when I work on it in my free time I’m more interested in supporting development communities with tools and infrastructures than I am in actually doing development myself. I’ve worked in QA before, and it intrigues me. I’d rather read about metrics and methodologies than algorithms (though those are cool too), and software marketing and licensing models are the primary reasons you’ll find me hanging out at business and law schools occasionally.

I love learning things by teaching them. I’m one of those people who can’t not teach, no matter what they’re doing. One phenomenon I’m intrigued by is that of improbable mastery; what makes people persevere at something they’re initially terrible at, and how do they transform from “utterly confused” to “one of the best in this domain”? It’s this kind of transformation I try to go for when I teach, which is why I especially like teaching college-level classes to newbies or cross-disciplinary populations with lots of students from outside “my field.” I have a strange habit that compels me to produce documentation as a side effect of learning something new, which tends to make my teachers very happy.

I love thinking about learning, which I usually describe with long-winded buzzwords like “sociological observations of communities of practice” when I’m on campus and with flurries of action (rather than talk) when I’m in hacker-land. My doctoral work focuses on comparing societies of open-source developers with societies of undergraduate engineering project teams and seeing what they can learn from each other. I’m interested in how to make things happen within technical academia, which means testing and documenting how to tweak the systems of processes and people who make decisions on how our future engineers will learn. I’m interested in how to make things happen in general, but academia is one particularly resistant-to-change venue that I’ve figured I do want to learn to change, rationalizing that changing much of the rest of the world would then feel easy in comparison.

Non-standard modifiers: I was the first person in my extended family to grow up and be schooled outside the developing world (the Philippines), and the first to develop hardware, software, and participate in internet communities. I grew up as a “disabled” kid with a hearing loss severe enough to warrant a host of technological aids, special classes, and a full-time sign language interpreter. It was an interesting childhood.

In my copious amounts of free time, I cook ridiculous things in huge let’s-feed-an-army quantities, play music (I’ve done everything from jazz piano to madrigal recorder troupes to junkyard percussion, but my current project is teaching myself to arrange fingerstyle guitar pieces), read anything I can get my hands on, try to pick up other languages (right now: German) and chill with my awesome family and friends all over the globe (go internet and postal service!) I also collect quirky technical textbooks. It is rumored that I am occasionally unconscious. However, I have yet to witness this, despite having stayed up multiple nights in attempts to record the phenomenon.
